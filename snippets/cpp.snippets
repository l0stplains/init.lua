snippet beg
	// {{{ Setup
	#include<bits/stdc++.h>
	
	using namespace std;

	template<typename T>
	typename enable_if<is_arithmetic<T>::value && !is_same<T, bool>::value && !is_same<T, char>::value, void>::type
	__print(const T &x) {
		cerr << x;
	}

	void __print(bool x) { cerr << (x ? "true" : "false"); }
	void __print(char x) { cerr << '\'' << x << '\''; }
	void __print(const char *x) { cerr << '\"' << x << '\"'; }
	void __print(const string &x) { cerr << '\"' << x << '\"'; }

	template<typename T, typename V>
	void __print(const pair<T, V> &x) {
		cerr << '{';
		__print(x.first);
		cerr << ", ";
		__print(x.second);
		cerr << '}';
	}

	template<typename... Args>
	void __print(const tuple<Args...>& t) {
		cerr << "(";
		std::apply([](const auto&... elems) {
			size_t n = 0;
			((cerr << (n++ ? ", " : ""), __print(elems)), ...);
		}, t);
		cerr << ")";
	}

	template<typename T>
	typename enable_if<!is_arithmetic<T>::value, void>::type
	__print(const T &x) {
		cerr << '{';
		bool first = true;
		for (const auto &elem : x) {
			if (!first) { cerr << ", "; }
			first = false;
			__print(elem);
		}
		cerr << '}';
	}

	void _print() { cerr << "]\n"; }

	template <typename T, typename... V>
	void _print(T t, V... v) {
		__print(t);
		if (sizeof...(v)) { cerr << ", "; }
		_print(v...);
	}

	// Debug macro: active only when ONLINE_JUDGE is not defined.
	#ifndef ONLINE_JUDGE
		#define debug(...) cerr << "[" << #__VA_ARGS__ << "] = ["; _print(__VA_ARGS__)
	#else
		#define debug(...)
	#endif

	typedef long long ll;
	typedef vector<int> vi;
	typedef vector<ll> vll;
	typedef pair<int, int> pii;
	typedef pair<ll, ll> pll;
	typedef vector<pii> vpi;
	typedef vector<pll> vpl;

	#define el "\n"
	#define F first
	#define S second
	#define pb push_back
	#define mp make_pair
	#define all(x) (x).begin(), (x).end()
	#define fast cin.sync_with_stdio(0); cin.tie(0);
	
	const int INF = numeric_limits<int>::max();
	const ll INF_LL = numeric_limits<ll>::max();
	const ll MOD_LL = 1e9 + 7;
	const int MOD = 998244353;

	// }}} End Setup
	void solve() {

    	${0}

		return;
	}
	
	int main(){
		fast;
    	int TC = 1;  ${1:} cin >> TC;
    	for(int i = 1; i <= TC; i++){
        	solve();
    	}
	}

	/*
	       .-"-.            .-"-.            .-"-.           .-"-.
	     _/_-.-_\_        _/.-.-.\_        _/.-.-.\_       _/.-.-.\_
	    / __} {__ \      /|( o o )|\      ( ( o o ) )     ( ( o o ) )
	   / //  "  \  \    | //  "  \  |      |/  "  \|       |/  "  \|
	  / / \'---'/ \ \  / / \'---'/ \ \      \'/^\'/         \ .-. /
	  \ \_/'"""'\_/ /  \ \_/'"""'\_/ /      /'\ /'\         /'"""'\
	   \           /    \           /      /  /|\  \       /       \
 
	*/
 	
snippet minimal
	#include <bits/stdc++.h>
 	
	using namespace std;
	typedef long long ll;

	#define el "\n"
	#define F first
	#define S second
	#define pb push_back
	#define fast cin.sync_with_stdio(0); cin.tie(0);

	int32_t main() {
    	$0
	}

snippet debug
	void __print(int x) {cerr << x;}
	void __print(long x) {cerr << x;}
	void __print(long long x) {cerr << x;}
	void __print(unsigned x) {cerr << x;}
	void __print(unsigned long x) {cerr << x;}
	void __print(unsigned long long x) {cerr << x;}
	void __print(float x) {cerr << x;}
	void __print(double x) {cerr << x;}
	void __print(long double x) {cerr << x;}
	void __print(char x) {cerr << '\'' << x << '\'';}
	void __print(const char *x) {cerr << '\"' << x << '\"';}
	void __print(const string &x) {cerr << '\"' << x << '\"';}
	void __print(bool x) {cerr << (x ? "true" : "false");}

	template<typename T, typename V>
	void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
	template<typename T>
	void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
	void _print() {cerr << "]\n";}
	template <typename T, typename... V>
	void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
	#ifndef ONLINE_JUDGE
	#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
	#else
	#define debug(x...)
	#endif
	
snippet for 
	for (int ${1:i} = 0; $1 < ${2:n}; $1++) {
    	$0
	}
  	
snippet vect 
	vector<${1:int}> ${2:arr};$0
 	
snippet all
	${1:arr}.begin(), $1.end()$0
 	
snippet readvec
	vector<${1:int}> ${2:arr}(${3:n});
	for ($1 &val : $2) {
    	cin >> val;
	}
	$0
 	
snippet sort
	sort(${1:arr}.begin(), $1.end());$0

